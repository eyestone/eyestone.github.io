<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>项目文档库</title>
    <link>http://eyestone.github.io/</link>
    <description>Recent content on 项目文档库</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jun 2016 17:23:24 +0800</lastBuildDate>
    <atom:link href="http://eyestone.github.io/index.xml" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>订单和商品部分底层设计</title>
            <link>http://eyestone.github.io/post/discuss-oder/</link>
            <pubDate>Mon, 06 Jun 2016 17:23:24 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-oder/</guid>
            <description>

&lt;h4 id=&#34;问题提出:040511b124b80c6ff6c159ebf8c53d4e&#34;&gt;问题提出&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;如何从商品信息中获取order_process表中的标识位的相关信息&lt;/li&gt;
&lt;li&gt;如何向用户展示详细的商品信息&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;讨论结果:040511b124b80c6ff6c159ebf8c53d4e&#34;&gt;讨论结果&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.商品种类和卖法的总结如下图：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eyestone/eyestone.github.io/master/img/merchandise.png&#34; width = &#34;550&#34;  alt=&#34;福米兑换场流程&#34;       align=center /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.因为卖法涉及到价格计算以及一些业务流程的变化，而一个商品可能涉及到多种卖法，所以讲卖法单独拿出来作为一个表，其中要包括卖法相关的信息和价格。&lt;/li&gt;
&lt;li&gt;3.目前订单部分为了照顾之前商品部分的内容，暂时不处理order_process表中的标识字段。&lt;/li&gt;
&lt;li&gt;4.在第一阶段的order部分内容开发完成之后开始重构商品部分，同时完善订单部分内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;参与人:040511b124b80c6ff6c159ebf8c53d4e&#34;&gt;参与人&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;林欣灏&lt;/li&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;记录:040511b124b80c6ff6c159ebf8c53d4e&#34;&gt;记录&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>服务器代码的进化史</title>
            <link>http://eyestone.github.io/post/server-upgrade/</link>
            <pubDate>Fri, 03 Jun 2016 09:21:36 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/server-upgrade/</guid>
            <description>

&lt;p&gt;代码之美如同数学之美，好的代码通常是结构清晰，简单优雅的。
代码如同生命，需要时间的磨砺和进化，下面将对我们的服务器代码需进化的方向做系列分析。&lt;/p&gt;

&lt;h4 id=&#34;1-运行零配置:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;1. 运行零配置&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;一般服务器代码需要部署到容器之中才能正常运行，这不太符合拿来即用的原则。本地环境复杂化一向不是我推崇的方法，中国人自有最优秀的设计基因，比如中国的筷子就是比老外的刀叉更优秀的设计，所以复杂的代码系统不仅仅是功能设计，还需要优秀的配置管理。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;已搞定&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;目前，通过对gradle脚本的改造，已经实现“运行零配置”的目标，方法为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd welfare
gradle tomcatRunWar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你可以说，上面的代码还不完全是零配置，还需要安装gradle才能运行，当然不是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd welfare
../gradlew tomcatRunWar 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;gradlew 命令是在project根目录下的命令行，会自动在线下载gradle的运行环境，当然第一次执行时因为下载会比较费时。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;待解决的问题&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;代码中缓存系统memcached关闭后，tomcat启动时仍在不停的连接12345端口，这意味着代码中memcached的连接存在不能关闭的隐患&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;2-session共享:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;2. session共享&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;session通常记录用户的登录信息，保持用户的登录状态。&lt;/p&gt;

&lt;p&gt;现在的session系统采用spring默认的http session，只能自己用，不能分享给别人用，这种情况不利于未来微架构系统的分布式部署。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;采用spring-session框架, 将session由内存数据库redis接管。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;3-紧耦合的session和权限管理:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;3. 紧耦合的session和权限管理&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;为实现标题中的功能，把代码写得到处都是，代价是不易维护，增加各种潜在隐患。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;采用切面技术将session和权限功能进行接管。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;4-丑陋的memcached:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;4. 丑陋的memcached&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;先声明，其实memcached作为一个缓存技术，一点也不丑陋，这里的丑陋是指我们的使用它的代码丑陋。我们的使用方法是先写了一个数据库工具框架，然后在框架中嵌入memcached调用，要对那个表数据缓存，就把该表增加到insert，update，delete三个基本操作中。在很多年前，这样的设计是最优秀的方法之一，但时至今日，这样的设计不够灵活，现在增加一个缓存可以到方法上，简单到增加一个注解即可。&lt;/p&gt;

&lt;p&gt;其二，对于缓存系统的使用，我更倾向于被广泛使用且兼容性好的。比如现在redis的被支持率明显高于memcached，很多框架代码缺省支持redis，如果我们想继续使用memcached，必须自行寻找各种支持库，麻烦费时。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用redis代替memcached，但由于涉及到数据库处理层的修改，需要保持极度谨慎。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;5-多环境零配置:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;5. 多环境零配置&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;现有的代码环境，简单分为开发环境和生产环境，而开发环境指向的域名为laifucard.net,生产环境为.com，在gradle编译时只需要通过snapshot和release参数就能区分产生不同环境的运行时war文件。&lt;/p&gt;

&lt;p&gt;但，实际代码的实现方式却不优雅。仅仅是为了在不同编译参数时采用不同的域名，居然在service子项目中写了两个bean，同时还在两个xml文件中分别进行配置，想想就心塞。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;将代码环境分为 开发环境 生产环境 和 本地开发环境，因为目前的开发环境主要适用于laifucard.net环境&lt;/li&gt;
&lt;li&gt;环境变量写到文本配置文件中，目前主要包括域名配置和数据库配置信息&lt;/li&gt;
&lt;li&gt;由程序自动选择性读取不同的环境变量，可采用spring的profile特性&lt;/li&gt;
&lt;li&gt;gradle脚本增加一个编译选项，命名为local&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;6-自动化测试:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;6. 自动化测试&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;目前代码并没有养成单元测试的习惯，服务器端的单元测试大量集中于对接口的测试，实现技术主要采用google的mokito框架。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;针对已有接口写单元测试模板，供大家参考&lt;/li&gt;
&lt;li&gt;gradle脚本增加集成测试编译选项，使其自动化&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;7-代码检查:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;7. 代码检查&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;目前的代码检查方案是checkstyle,我原来已经做过检查。问题在于该工具的检查深度不够，我们需要更高级的工具帮我们来改善代码质量.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;启用sonarqube技术，对源码做最全面的检查&lt;/li&gt;
&lt;li&gt;根据检查结果，消除隐患，清除代码冗余&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;8-异步消息系统:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;8. 异步消息系统&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;服务器系统中有短信通知、邮件通知、app通知等多种通知模式，在现阶段没什么用户的情况下问题不大，但当用户基数上去以后，最好将通知系统由异步消息系统接管，才能进一步提高服务器效率。&lt;/p&gt;

&lt;p&gt;所谓异步消息系统就好比一个邮局，服务器程序只需要把通知内容交给邮局，就可以忙自己的其他事情了，剩下的事情都交给邮局自行处理。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;服务器端部署消息代理系统&lt;/li&gt;
&lt;li&gt;改造msg-push子项目，进行xml文件配置即可&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;(未完，待续)&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>术语说明</title>
            <link>http://eyestone.github.io/post/common-terms/</link>
            <pubDate>Thu, 02 Jun 2016 16:55:50 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/common-terms/</guid>
            <description>&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;术语　　　　 　　　&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;解释 　　　&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;订单进程&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;指编程相关的流程控制，在订单系统中，涉及到springWebFlow的流程&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;订单过程&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;指一个订单从选购商品到最后成交的用户和系统交互的过程。目前整理的过程包括：选购商品-&amp;gt;加入购物车-&amp;gt;确认订单-&amp;gt;支付订单-&amp;gt;发货-&amp;gt;物流-&amp;gt;签收&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;付款码&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用于表明用户已购买身份的码。比如用户在我们平台上购买了一个健身卡，平台给用户分配一个付款码，用户凭此付款码就可以到相关的健身房健身。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;参与码&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;对于一些付费或者有限制条件的活动，用户报名后平台给用户分配一个参与码，用户凭这个码可以参与活动&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;充福米&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用各种方式为用户账户充入福米&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;充值&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;为各种卡等虚拟商品充值，可以使用福米、支付宝等各种方式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;福米充值&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;这显然是个坑，概念太模糊，不建议使用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;　　&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;记录&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>福米兑换场流程和相关接口的讨论</title>
            <link>http://eyestone.github.io/post/discuss-fumiCashing/</link>
            <pubDate>Tue, 31 May 2016 14:38:51 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-fumiCashing/</guid>
            <description>

&lt;h4 id=&#34;问题提出:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;问题提出&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;对于即将开展的工作内容的常规讨论&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;讨论结果:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;讨论结果&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.流程图如下，图中备注为需要用到的接口，打钩的表示已经实现的&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eyestone/eyestone.github.io/master/img/fumiExchangeFlowChart.png&#34; width = &#34;550&#34;  alt=&#34;福米兑换场流程&#34; align=center /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.在旧版本的代码中实现相关接口&lt;/li&gt;
&lt;li&gt;3.使用spring web flow技术实现订单部分内容&lt;/li&gt;
&lt;li&gt;4.对数据库表进行了相应的修改&lt;/li&gt;

&lt;li&gt;&lt;p&gt;5.order_status表中增加1个状态：已处理，表示我们平台已经将信息提交到供应商。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name　　　　value　　　　remark&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;已删除　　　　0&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;未付款　　　　1&lt;/li&gt;
&lt;li&gt;已付款　　　　2&lt;/li&gt;
&lt;li&gt;已取消　　　　3&lt;/li&gt;
&lt;li&gt;已消费　　　　4&lt;/li&gt;
&lt;li&gt;申请退款中　　5&lt;/li&gt;
&lt;li&gt;已退款　　　　6&lt;/li&gt;
&lt;li&gt;已评价　　　　7&lt;/li&gt;
&lt;li&gt;已处理　　　　8　　　　　　表示我们平台已经将订单通知到供应商，可能需要改编号&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;6.order_v2表中增加一个exception_code字段，用于记录异常信息。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name　　　　value　　　　remark&lt;/li&gt;
&lt;li&gt;正常　　　　　0&lt;/li&gt;
&lt;li&gt;订单缺货　　　1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;7.订单过程，因为目前没有办法监控供应商和物流，所以对于我们来说，用户付款就认为交易完成。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;数据库相关:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;数据库相关&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.购物车：bills，charge_record，collection，service_invoke_record&lt;/li&gt;
&lt;li&gt;2.订单：order_pay(暂时不用)，order_detail，link_type，order_v2(在用)，order(旧表，不建议用)，order_status，order_ticket_link，user_delivery_info&lt;/li&gt;
&lt;li&gt;3.merchandise_off_price(不建议用，在相关的表中使用tags字段作为另一个价格)，merchandise_specification，merchandise_type，merchandise_qualification，merchandise&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;todo:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;TODO&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.增加收货地址表，设置：userUuid，address，consignee，default，modifyTime字段&lt;/li&gt;
&lt;li&gt;2.实现相关接口&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;问题:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;问题&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.考虑多商品订单如果往新的表（分子表）中存放，会出现什么问题？&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;参与人:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;参与人&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;林欣灏&lt;/li&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;记录:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;记录&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>关于hugo中markdown格式的兼容性问题</title>
            <link>http://eyestone.github.io/post/hugo-issues/</link>
            <pubDate>Tue, 31 May 2016 10:21:34 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/hugo-issues/</guid>
            <description>&lt;p&gt;目前hugo并不兼容markdown的高级格式功能，比如todo list和流程图。&lt;/p&gt;

&lt;p&gt;经检查源码，发现是markdown的解码问题，原理为通过识别markdown标识，解析成对应html格式，而是流程图功能，为markdown扩展功能，用到了html5的矢量图特性。这类的功能增强要么我们自己扩展，要么坐等官方更新。&lt;/p&gt;

&lt;p&gt;仅作记录，空了继续补充。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>在windows下使用hugo写博客</title>
            <link>http://eyestone.github.io/post/tutorial-UseBlogOnWindows/</link>
            <pubDate>Wed, 25 May 2016 11:45:30 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/tutorial-UseBlogOnWindows/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;运行框（开始按钮旁边的小框框）输入cmd，回车打开命令行工具&lt;/li&gt;
&lt;li&gt;输入cd D: 回车  这个是跳转到相关的磁盘，如果是E盘，就输入E:&lt;/li&gt;
&lt;li&gt;输入 D: 回车  这个是切换到相应的盘&lt;/li&gt;
&lt;li&gt;输入 cd dir 回车  dir为要进入的目录，比如你的blog目录放在D:/blog就直接输入 cd blog&lt;/li&gt;
&lt;li&gt;新建文件 hugo new post/filename.md 这样就会在blog/content/post目录下创建一个filename.md文件&lt;/li&gt;
&lt;li&gt;用文本编辑器打开要编辑的文件进行编辑保存&lt;/li&gt;
&lt;li&gt;在命令行输入show.cmd，然后在浏览器输入localhost:1313即可查看本地的文档&lt;/li&gt;
&lt;li&gt;使用deploy.cmd命令，可以将本地文档同步到服务器&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>任务列表</title>
            <link>http://eyestone.github.io/post/todo-list/</link>
            <pubDate>Tue, 24 May 2016 19:34:32 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/todo-list/</guid>
            <description>

&lt;h3 id=&#34;方法:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;1.每天查看ui、后台、管理端web、android、ios版本进度，记录问题&lt;/li&gt;
&lt;li&gt;2.对任务进行分类，重要任务和前置任务先完成&lt;/li&gt;
&lt;li&gt;3.对任务进行分解，整理依赖关系&lt;/li&gt;
&lt;li&gt;4.讨论订立时间表，按节奏推进&lt;/li&gt;
&lt;li&gt;5.个人自己管理还是统一管理任务进度？&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;方案:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;方案&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将汇总的任务列表上传到github博客，通知到所有人。相关人员查看到博客之后，从博客中摘出任务，创建issue，创建方式参见说明。任务执行完成之后由相关人员关闭issue。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;原则：尽量不加班&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;汇总:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;汇总:&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;1.效果图需要和app对一遍，此任务放后，待功能实现完成&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;ui:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;ui：&lt;/strong&gt;&lt;/h3&gt;

&lt;h5 id=&#34;待改:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;1.修改手势密码，改为先验证手势密码，然后设置新的 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;2.试算页面不够活泼 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;3.我的账单部分分收入和支出 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.我的订单：&amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.修改升档部分的设计 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;6.申请记录修改为只显示企业团险和交通意外险两大类，可删除，点进去可修改 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;7.调整android界面，一些图片的大小 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.付款成功页面未做 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;2.购物车添加下箭头，可以点开进行修改 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;3.我的活动 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.心愿单 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.我的特权&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;后台:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;后台：&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;配合管理端web和前端任务做具体的设置&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;待改-1:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.读取所有保险详情列表解析问题  &amp;ndash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;2.测试所有保险相关接口 &amp;ndash; &lt;em&gt;done : 暂时没有发现问题，随时有问题随时响应&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;3.设计和实现升档部分接口：需要增加一个获取历史信息的接口  &amp;ndash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.用户使用邀请码验证通过后应该关联公司和用户  &amp;ndash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.添加关于试算修改的讨论记录—&amp;gt;添加两个接口：修改和删除  &amp;mdash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;6.数据库表中的保险申请，添加一个type字段，标明是试算的还是升档的  &amp;ndash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;7.写福米兑换场讨论结果文档，包括整个流程 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;8.写签证部分文档&lt;/li&gt;
&lt;li&gt;9.写福米兑换场相关的接口文档到showdoc &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;10.保险订单需要加入ticket，优先级高 &amp;ndash;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做-1:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.福米兑换场 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;1.1.梳理福米兑换场业务逻辑&lt;/li&gt;
&lt;li&gt;1.2.梳理福米兑换场部分的代码&lt;/li&gt;
&lt;li&gt;1.3.实现底层代码：将福米支付写到anypay，实现dao，实现service，重写LaifuPay类&lt;/li&gt;
&lt;li&gt;1.4.实现controller&lt;/li&gt;
&lt;li&gt;1.5.添加一个获取邮费信息接口，目前两种方式，普邮10块，顺丰23块。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2.签证：暂时没有资源&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;管理端web:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;管理端web：&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;1.熟悉angular框架 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;2.整理缺失的表单逻辑 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;3.写ajax参数跨域转换函数 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;待改-2:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做-2:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.保险理赔信息管理&lt;/li&gt;
&lt;li&gt;2.保险申请信息管理&lt;/li&gt;
&lt;li&gt;3.保险档案管理&lt;/li&gt;
&lt;li&gt;4.订单管理&lt;/li&gt;
&lt;li&gt;5.用户反馈管理&lt;/li&gt;
&lt;li&gt;6.运维人员管理&lt;/li&gt;
&lt;li&gt;7.其他：具体需求具体讨论&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;android:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;android：&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&#34;待改-3:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.登陆：输入密码确定以后先崩溃然后进入app&lt;/li&gt;
&lt;li&gt;2.活动分享：未完成&lt;/li&gt;
&lt;li&gt;3.租房详情：去掉more按钮&lt;/li&gt;
&lt;li&gt;4.关于来福：修改和ios一致&lt;/li&gt;
&lt;li&gt;5.修改手机号：验证身份证，提示邮箱不符合规范&lt;/li&gt;
&lt;li&gt;6.个人信息右边的编辑图标删除&lt;/li&gt;
&lt;li&gt;7.反馈：放到个人信息页&lt;/li&gt;
&lt;li&gt;8.账户余额:修改和效果图一致&lt;/li&gt;
&lt;li&gt;9.试算页面：添加一人后，不能修改信息&lt;/li&gt;
&lt;li&gt;10.升档页面跟进设计稿修改 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;11.邀请码验证页面修改为验证手机号和邀请码&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做-3:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.福米兑换场&lt;/li&gt;
&lt;li&gt;2.去评分：未做&lt;/li&gt;
&lt;li&gt;3.我的福利：保险，确定是不是因为没有数据导致&lt;/li&gt;
&lt;li&gt;4.我的保障：交通意外险 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.福享汇：福米兑换场&lt;/li&gt;
&lt;li&gt;6.我的保障：申请记录列表，删除功能 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;7.我的保障：申请记录修改，使用试算页面逻辑(约两天时间) &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;ios:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;ios：&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&#34;待改-4:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.活动—活动报名页：时间图标应该和时间一起隐藏&lt;/li&gt;
&lt;li&gt;2.账号设置：右面编辑图标删掉&lt;/li&gt;
&lt;li&gt;3.账号设置：安全设置可以修改的条目应该给一个右箭头&lt;/li&gt;
&lt;li&gt;4.重置登陆密码页面：修改和android一致&lt;/li&gt;
&lt;li&gt;5.关于来福页面：字体颜色有问题&lt;/li&gt;
&lt;li&gt;6.我的福利页面修改和效果图保持一致&lt;/li&gt;
&lt;li&gt;7.账户余额页面照效果图修改&lt;/li&gt;
&lt;li&gt;8.企业团险详情页面：字体居中&lt;/li&gt;
&lt;li&gt;9.从企业团险详情—详情 进入的保险详情页面显示浮标；从具体的某个保险点击进入的保险详情不显示浮标&lt;/li&gt;
&lt;li&gt;10.保险详情页：背景没有色块，按照效果图做&lt;/li&gt;
&lt;li&gt;11.按钮感应范围不舒服：
顶端返回按钮感应范围太宽
试算页面加减按钮感应范围太窄&lt;/li&gt;
&lt;li&gt;12.试算页面增加一人后，点击相应的列表应该在上面显示相应的信息，以便修改&lt;/li&gt;
&lt;li&gt;13.申请记录去掉假数据，调用接口&lt;/li&gt;
&lt;li&gt;14.申请记录点击后，背景色改浅一点&lt;/li&gt;
&lt;li&gt;15.报险，提交报险信息后，提示“xxx小时候后会有答复”&lt;/li&gt;
&lt;li&gt;16.租房详情：删除more按钮&lt;/li&gt;
&lt;li&gt;17.租房的分享：分享失败&lt;/li&gt;
&lt;li&gt;18.活动收藏：收藏或取消后不刷新&lt;/li&gt;
&lt;li&gt;19.升档页面跟进设计稿修改 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;20.试算页面开发 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;21.我的保障，申请记录列表，删除功能&lt;/li&gt;
&lt;li&gt;22.我的保障，申请记录修改，使用试算页面逻辑&lt;/li&gt;
&lt;li&gt;23.我的福利，保险购买记录&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做-4:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.福米兑换场&lt;/li&gt;
&lt;li&gt;2.签证：暂时没有资源&lt;/li&gt;
&lt;li&gt;3.邀请码验证页面未做&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>关于升档页面有未保存的编辑数据时的提交的讨论</title>
            <link>http://eyestone.github.io/post/discuss-shengdang3/</link>
            <pubDate>Tue, 24 May 2016 19:10:23 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-shengdang3/</guid>
            <description>&lt;p&gt;&lt;strong&gt;问题提出&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;按照之前的设计，在点击添加人的时候会默认将当前编辑的人的信息保存&lt;/li&gt;
&lt;li&gt;可是“我”并不想保存这个人的信息&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;讨论结果&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.人名右边的点击按钮只作为展开人名列表之用&lt;/li&gt;
&lt;li&gt;2.下面的“添加一人”按钮用做保存已编辑的信息&lt;/li&gt;
&lt;li&gt;3.修改已保存的列表中的信息时，如果有未保存的人的信息，提示“放弃|保存”&lt;/li&gt;
&lt;li&gt;4.点击“提交”按钮时，如果有未保存的人的信息，提示“放弃|提交”&lt;/li&gt;
&lt;li&gt;5.如果选择放弃即将未保存的信息忽略，其他信息照常处理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;参与人&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;李艳&lt;/li&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;记录&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>企业用户邀请码验证流程</title>
            <link>http://eyestone.github.io/post/discuss-loginWorkFlow/</link>
            <pubDate>Fri, 20 May 2016 10:44:39 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-loginWorkFlow/</guid>
            <description>

&lt;h4 id=&#34;流程:c3d737271291e416175d535fdd08de68&#34;&gt;流程&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;企业收集员工的手机号&amp;ndash;&amp;gt;提供到来福&amp;ndash;&amp;gt;从后台录入并分配邀请码（放到invite_code表中）&lt;/li&gt;
&lt;li&gt;用户打开app&amp;ndash;&amp;gt;点击邀请码验证&amp;ndash;&amp;gt;输入手机号和邀请码&amp;ndash;&amp;gt;查询邀请码存在&amp;ndash;&amp;gt;生成用户&amp;ndash;&amp;gt;关联公司&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;使用场景:c3d737271291e416175d535fdd08de68&#34;&gt;使用场景&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;验证过程中，用户已生成但是未完成信息修改：&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;认为用户未完成验证，下次打开app的时候重新进行验证&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;用户使用A手机号获取邀请码完成注册，之后将手机号修改成B。A手机号被另一个人使用来获取邀请码。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;应该让其正常通过验证&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;备注:c3d737271291e416175d535fdd08de68&#34;&gt;备注&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;使用邀请码和激活码用户的区别：使用邀请码验证的用户是那一类信息比较少的，一般指没有身份证号，更多的是只提供了手机号码的一类；使用激活码的用户指信息比较全的用户，一般指包括身份证号都存在的用户，由后台上传用户信息，用户自己激活。&lt;/li&gt;
&lt;li&gt;激活码目前不适用数据库中的激活码，而是使用短信验证码。&lt;/li&gt;
&lt;li&gt;使用邀请码的用户不需要再激活。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;记录人:陆文金&lt;/em&gt;&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>关于保险升档和试算页面细节的讨论</title>
            <link>http://eyestone.github.io/post/discuss-shendaang2/</link>
            <pubDate>Fri, 20 May 2016 10:40:29 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-shendaang2/</guid>
            <description>

&lt;h4 id=&#34;问题提出:aa1486aae297c44767f8d9ba804921d9&#34;&gt;问题提出&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;对于已签约但是已过期的用户是否算升档&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;问题演变:aa1486aae297c44767f8d9ba804921d9&#34;&gt;问题演变&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用户不知道自己该升档还是该试算的时候，如果要买重疾，必须买够4份意外，但是对于已购2份意外的情况，所以需要历史数据。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;需要确定的问题:aa1486aae297c44767f8d9ba804921d9&#34;&gt;需要确定的问题&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;app鉴别试算和升档：只要买有未过期的已签约保险就算升档，否则算签约&lt;/li&gt;
&lt;li&gt;最终鉴别新申请和升档：线下确定&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;讨论结果:aa1486aae297c44767f8d9ba804921d9&#34;&gt;讨论结果&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;界面仍保留现在的方案&lt;/li&gt;
&lt;li&gt;如果不满足升档条件，升档按钮不可点击&lt;/li&gt;
&lt;li&gt;试算页面不显示已申请的历史记录&lt;/li&gt;
&lt;li&gt;升档页面在保险种类下面显示已申请的历史信息供参考&lt;/li&gt;
&lt;li&gt;升档页面计算份数和总量的时候调用历史申请记录&lt;/li&gt;
&lt;li&gt;申请记录：显示企业团险和交通意外险两个大类&lt;/li&gt;
&lt;li&gt;申请记录可以删除&lt;/li&gt;
&lt;li&gt;申请记录可以点击进去，跳转到试算页面，显示份数，提交可更新到服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;参与人:aa1486aae297c44767f8d9ba804921d9&#34;&gt;参与人&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;freeopen&lt;/li&gt;
&lt;li&gt;liyan&lt;/li&gt;
&lt;li&gt;luwj&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;recorder: luwj&lt;/em&gt;&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>关于保险升档页面的讨论</title>
            <link>http://eyestone.github.io/post/discuss-shendaang/</link>
            <pubDate>Fri, 20 May 2016 10:40:29 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-shendaang/</guid>
            <description>

&lt;h4 id=&#34;不确定点:e5a7cbca26aa9c314aa0f264d65ad094&#34;&gt;不确定点&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;李艳回忆说马老师要求显示关系&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;讨论结果:e5a7cbca26aa9c314aa0f264d65ad094&#34;&gt;讨论结果&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;选择人员部分直接显示人名，用备注的方式显示和用户的关系&lt;/li&gt;
&lt;li&gt;选择人员部分保留一行，可显示多个名字，当要查看选择更多的受益人的时候点开加号，出现浮动选择框（当收受益人只有一个时，加号不显示）&lt;/li&gt;
&lt;li&gt;已选择的保险可以点击修改和删除&lt;/li&gt;
&lt;li&gt;从服务器获取和用户相关的人员的保险购买信息，用来确定其是否满足升档条件&lt;/li&gt;
&lt;li&gt;对于不满足条件的保险项目，app应禁止选择，服务器也要做相应检查&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;todo:e5a7cbca26aa9c314aa0f264d65ad094&#34;&gt;TODO&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;按照讨论结果设计界面&lt;/li&gt;
&lt;li&gt;和马老师确定不确定点&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;记录人: 陆文金&lt;/em&gt;&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>github博客使用说明</title>
            <link>http://eyestone.github.io/post/first/</link>
            <pubDate>Wed, 18 May 2016 21:20:54 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/first/</guid>
            <description>

&lt;h3 id=&#34;1-概述:e8fb9c67eba912c72729806db31eaa1b&#34;&gt;1.概述&lt;/h3&gt;

&lt;p&gt;本博客系统由hugo（go语言本地博客系统）结合github pages组成，采用markdown格式编辑，用hugo命令自动生成静态网页，采用git命令行进行发布。&lt;/p&gt;

&lt;p&gt;善用本系统可获得如下好处，一个是本地编辑好过网页编辑，特别是网站很慢网络不稳定的时候; 另一个是markdown 格式的编写，可以让作者不再关注鼠标式的排版问题，真正聚焦于内容创作上。&lt;/p&gt;

&lt;p&gt;博客访问地址为&lt;code&gt;eyestone.github.io&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-系统安装:e8fb9c67eba912c72729806db31eaa1b&#34;&gt;2.系统安装&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;hugo 安装&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo&lt;/a&gt;,根据上述链接下载自己操作系统匹配的版本，如windows下载hugo_0.15_windows_amd64.zip，mac系统&lt;code&gt;brew install hugo&lt;/code&gt;, windows环境下解压文件后，建议将hugo命令所在目录设置到系统环境变量。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;git 安装（略）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;blog 模版安装&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;将公司共享服务器中blog目录复制到本机&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第一次使用时，克隆远程库&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd blog
$ git clone https://github.com/eyestone/eyestone.github.io.git public 
$ git clone https://github.com/eyestone/blog-content.git content 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-用markdown语法撰写博客:e8fb9c67eba912c72729806db31eaa1b&#34;&gt;3.用markdown语法撰写博客&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;在blog目录下，运行如下命令行&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/filename.md  //将在content/post/目录下自动生成blog模板文件
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;模版文件格式如下&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
title         = &amp;quot;文章标题&amp;quot;
tags         = [&amp;quot;标签1&amp;quot;, &amp;quot;标签2&amp;quot;]
categories    = [&amp;quot;分类1&amp;quot;,&amp;quot;分类2&amp;quot;]
date        = &amp;quot;2015-01-01&amp;quot;
+++

你的正文
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这时，使用任意的文本编辑器即可书写博客了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;博客预览&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;blog目录下运行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./show.sh   // mac or linux 平台

$ show      // windows 平台
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打开网页浏览器，输入地址&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;localhost:1313
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;发布到github&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;手动发布(当前目录为blog 目录)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ git pull   //养成习惯，先更新库
$ hugo
$ cd public
$ git add -A
$ git commit -m &amp;quot;add file title&amp;quot;
$ git push
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;自动发布&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ ./deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进阶，有兴趣者也可以考虑自行写windows批处理文件.&lt;/p&gt;

&lt;h3 id=&#34;4-one-more-thing:e8fb9c67eba912c72729806db31eaa1b&#34;&gt;4.One more thing&lt;/h3&gt;

&lt;p&gt;时时跟踪文章更新，才是博客系统最有力的功能。
写文章的同学，每次写完，还要邮件通知其它同事，是不是很麻烦？
下面仅对苹果手机做简单说明。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;官方浏览器打开本博客地址&lt;/li&gt;
&lt;li&gt;浏览器最下方选择 分享 图标，再选择 @ 图标&lt;/li&gt;
&lt;li&gt;再到浏览器的书签图标中点击“订阅”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;android手机的订阅说明，请其它有兴趣的同学继续补充。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;经测试，还是在手机上安装专用的RSS订阅软件比较好，苹果手机推荐Newsify.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;markdown 新功能测试&lt;/p&gt;

&lt;p&gt;-[] hello
-[X] &lt;del&gt;good morning&lt;/del&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-flow&#34;&gt;st=&amp;gt;start: Start:&amp;gt;https://www.zybuluo.com
io=&amp;gt;inputoutput: verification
op=&amp;gt;operation: Your Operation
cond=&amp;gt;condition: Yes or No?
sub=&amp;gt;subroutine: Your Subroutine
e=&amp;gt;end

st-&amp;gt;io-&amp;gt;op-&amp;gt;cond
cond(yes)-&amp;gt;e
cond(no)-&amp;gt;sub-&amp;gt;io
&lt;/code&gt;&lt;/pre&gt;
</description>
          </item>
        
      
    
  </channel>
</rss>
