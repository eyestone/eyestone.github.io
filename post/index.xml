<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 项目文档库</title>
    <link>http://eyestone.github.io/post/</link>
    <description>Recent content in Posts on 项目文档库</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Jun 2016 17:11:33 +0800</lastBuildDate>
    <atom:link href="http://eyestone.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>活动邀请码及邀请码报名设计逻辑</title>
            <link>http://eyestone.github.io/post/activity_invite/</link>
            <pubDate>Thu, 30 Jun 2016 17:11:33 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/activity_invite/</guid>
            <description>

&lt;p&gt;&lt;em&gt;author: freeopen&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;活动邀请码需求:ab7bbc3711d122254f98ee78f425e1c5&#34;&gt;活动邀请码需求&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;一个活动对应一个活动邀请码&lt;/li&gt;
&lt;li&gt;邀请码在活动保存时自动生成&lt;/li&gt;
&lt;li&gt;活动保存时，事先判断邀请码是否存在，如果不存在就生成一个。&lt;/li&gt;
&lt;li&gt;活动结束时，邀请码自动失效&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;设计逻辑:ab7bbc3711d122254f98ee78f425e1c5&#34;&gt;设计逻辑&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;延用登录邀请码的数据表invite_code&lt;/li&gt;
&lt;li&gt;invite_code.company_uuid 字段，存入新增的活动uuid&lt;/li&gt;
&lt;li&gt;邀请码的生成逻辑采用4位随机数字&lt;/li&gt;
&lt;li&gt;为了区分邀请的使用场景，当send=1&amp;amp;used=0时，识别为用户注册邀请码；当send=2时，识别为活动邀请码&lt;/li&gt;
&lt;li&gt;invite_code.used 字段，记录参加的人数&lt;/li&gt;
&lt;li&gt;当活动过期时，将send字段设置为 -1&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;邀请码报名需求:ab7bbc3711d122254f98ee78f425e1c5&#34;&gt;邀请码报名需求&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;邀请码报名应用于非注册用户，当用户输入邀请码时，弹出填写报名信息页面&lt;/li&gt;
&lt;li&gt;非注册用户填写报名信息时，和注册用户不同的时，需要多填写姓名、电话和公司，其中姓名和电话为必填项&lt;/li&gt;
&lt;li&gt;报名有时需要可支付，支付支持微信、支付宝和福米&lt;/li&gt;
&lt;li&gt;报名有时需要限制为公司专属，即只有该公司的用户才允许报名&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;设计逻辑-1:ab7bbc3711d122254f98ee78f425e1c5&#34;&gt;设计逻辑&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;注册用户报名时，报名需填写的信息由后台json格式定义.&lt;/li&gt;
&lt;li&gt;非注册用户采用邀请码报名时，除填写原报名信息外，还需填写姓名、电话和公司等信息&lt;/li&gt;
&lt;li&gt;报名成功后，将报名数据存入新表activity_attend_v2 (因为原activity_attend必须要存user_uuid,只能弃用).&lt;/li&gt;
&lt;li&gt;当活动不需要支付时，不生成订单，报名信息存入 activity_attend_v2.&lt;/li&gt;
&lt;li&gt;当活动需要支付时，在order_v2表生成订单，订单类型为活动&lt;/li&gt;
&lt;li&gt;支付数据永远从新版订单表中读取，采用新的支付接口&lt;/li&gt;
&lt;li&gt;活动为公司专属时，判断用户的所属公司，对于公司专属的活动，报名时不启动邀请码报名模块&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>关于签证申请填写信息的设计及约定</title>
            <link>http://eyestone.github.io/post/visa/</link>
            <pubDate>Tue, 28 Jun 2016 19:00:23 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/visa/</guid>
            <description>

&lt;h3 id=&#34;原则:2481f61e1439acf1f7fa15709744090c&#34;&gt;原则&lt;/h3&gt;

&lt;p&gt;不破坏原有的数据库和订单设计，将新增的数据采用以下约定的json格式存储到相关备注字段。&lt;/p&gt;

&lt;h3 id=&#34;表字段的对应关系:2481f61e1439acf1f7fa15709744090c&#34;&gt;表字段的对应关系&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;出行日期、发票抬头、电子邮件&lt;/strong&gt; json格式 存入 &lt;strong&gt;order_v2.remark&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;{&amp;quot;out_date&amp;quot; : &amp;quot;2016-06-01&amp;quot;,
 &amp;quot;invoice&amp;quot; : &amp;quot;xxx公司&amp;quot;,
 &amp;quot;email&amp;quot; : &amp;quot;xxx@qq.com&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;办理人数&lt;/strong&gt; 存入 &lt;strong&gt;detail.quantity&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;境外旅行意外险&lt;/strong&gt; 存入 &lt;strong&gt;order_v2.delivery_fee&lt;/strong&gt;，这里记录保险单价和人数的乘积
保险的单价存储为全局变量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;联系人、联系电话、资料返回地址&lt;/strong&gt; 存入 &lt;strong&gt;user_delivery_v2&lt;/strong&gt; 的对应字段&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;申请人、客户类型&lt;/strong&gt; json数组格式 存入 &lt;strong&gt;order_detail.remark&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;{&amp;quot;applys&amp;quot; : 
  [
    {
      &amp;quot;name&amp;quot;: &amp;quot;小燕&amp;quot;,
      &amp;quot;type&amp;quot;: &amp;quot;在职&amp;quot;
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;小小燕&amp;quot;,
      &amp;quot;type&amp;quot;: &amp;quot;在校学生&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>充福米的讨论</title>
            <link>http://eyestone.github.io/post/discuss-chargefumi/</link>
            <pubDate>Tue, 28 Jun 2016 09:55:59 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-chargefumi/</guid>
            <description>

&lt;h4 id=&#34;讨论结果:e2a14ffd4cada7e307e6d010cb9e7f35&#34;&gt;讨论结果&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;在merchandise中添加一个商品，type设置为福米&lt;/li&gt;
&lt;li&gt;在tags中设置阶梯价格，包括50元，100元，500元，json:{&amp;ldquo;price1&amp;rdquo;: 50,&amp;ldquo;price2&amp;rdquo;:100,&amp;ldquo;price3&amp;rdquo;:500}&lt;/li&gt;
&lt;li&gt;充值的时候先生成订单，订单类型设置为充福米；付款的时候判断如果是充福米，则给用户的salary加相应的福米&lt;/li&gt;
&lt;li&gt;充福米不退款&lt;/li&gt;
&lt;li&gt;福米充值的订单不显示在用户的订单中&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;记录人:e2a14ffd4cada7e307e6d010cb9e7f35&#34;&gt;记录人&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>关于活动报名信息的json格式约定</title>
            <link>http://eyestone.github.io/post/activity_attend/</link>
            <pubDate>Mon, 27 Jun 2016 14:44:28 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/activity_attend/</guid>
            <description>

&lt;p&gt;&lt;em&gt;author : freeopen&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;list&amp;quot;:[
        {
            &amp;quot;topic&amp;quot;:&amp;quot;性别&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;one&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:11,
                    &amp;quot;tagName&amp;quot;:&amp;quot;男&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:12,
                    &amp;quot;tagName&amp;quot;:&amp;quot;女&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;宝宝年龄&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;one&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:21,
                    &amp;quot;tagName&amp;quot;:&amp;quot;0-2&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:22,
                    &amp;quot;tagName&amp;quot;:&amp;quot;3-4&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:23,
                    &amp;quot;tagName&amp;quot;:&amp;quot;5-6&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;陪同家长&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;more&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:31,
                    &amp;quot;tagName&amp;quot;:&amp;quot;爸爸&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:32,
                    &amp;quot;tagName&amp;quot;:&amp;quot;妈妈&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:33,
                    &amp;quot;tagName&amp;quot;:&amp;quot;爷爷&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:34,
                    &amp;quot;tagName&amp;quot;:&amp;quot;奶奶&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;手机号码&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;number&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:41,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;工作单位&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:51,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;json格式说明:19e7dc3fb049efb1274e23046f3c468b&#34;&gt;json格式说明&lt;/h3&gt;

&lt;p&gt;这里的json格式将对应app上不同的可视控件内容，详细如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;topic 标题&lt;/li&gt;
&lt;li&gt;type 控件类型

&lt;ul&gt;
&lt;li&gt;one   单选&lt;/li&gt;
&lt;li&gt;more 多选&lt;/li&gt;
&lt;li&gt;number 仅填数字的输入框&lt;/li&gt;
&lt;li&gt;text 填文本的输入框&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;tagId 自定义的id编号，相当于数组索引，方便代码快速检索&lt;/li&gt;
&lt;li&gt;tagName 当控件类型为 单选 和 多选 时有效，即选项信息&lt;/li&gt;
&lt;li&gt;tagStatus  当类型为单选和多选时，记录用户的选中情况, 其中为1时，表示缺省值，另外用户选中时为1，取消时为0。当为输入框时，记录输入内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;常用活动报名举例:19e7dc3fb049efb1274e23046f3c468b&#34;&gt;常用活动报名举例&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;list&amp;quot;:[
        {
            &amp;quot;topic&amp;quot;:&amp;quot;姓名&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:41,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;手机号码&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;number&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:41,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;工作单位&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:51,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>任务列表</title>
            <link>http://eyestone.github.io/post/todo-list/</link>
            <pubDate>Wed, 22 Jun 2016 12:34:32 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/todo-list/</guid>
            <description>

&lt;h3 id=&#34;方法:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;方法&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;1.每天查看ui、后台、管理端web、android、ios版本进度，记录问题&lt;/li&gt;
&lt;li&gt;2.对任务进行分类，重要任务和前置任务先完成&lt;/li&gt;
&lt;li&gt;3.对任务进行分解，整理依赖关系&lt;/li&gt;
&lt;li&gt;4.讨论订立时间表，按节奏推进&lt;/li&gt;
&lt;li&gt;5.个人自己管理还是统一管理任务进度？&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;方案:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;方案&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将汇总的任务列表上传到github博客，通知到所有人。相关人员查看到博客之后，从博客中摘出任务，创建issue，创建方式参见说明。任务执行完成之后由相关人员关闭issue。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;原则：尽量不加班&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;汇总:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;汇总:&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;1.效果图需要和app对一遍，此任务放后，待功能实现完成&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;ui:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;ui：&lt;/strong&gt;：&lt;/h3&gt;

&lt;h5 id=&#34;待改:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;1.修改手势密码，改为先验证手势密码，然后设置新的 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;2.试算页面不够活泼 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;3.我的账单部分分收入和支出 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.我的订单：&amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.修改升档部分的设计 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;6.申请记录修改为只显示企业团险和交通意外险两大类，可删除，点进去可修改 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;7.调整android界面，一些图片的大小 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.付款成功页面未做 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;2.购物车添加下箭头，可以点开进行修改 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;3.我的活动 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.心愿单 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.我的特权&lt;/li&gt;
&lt;li&gt;6.商品订单评论页面&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;后台:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;后台：&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;配合管理端web和前端任务做具体的设置&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;待改-1:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.读取所有保险详情列表解析问题  &amp;ndash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;2.测试所有保险相关接口 &amp;ndash; &lt;em&gt;done : 暂时没有发现问题，随时有问题随时响应&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;3.设计和实现升档部分接口：需要增加一个获取历史信息的接口  &amp;ndash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.用户使用邀请码验证通过后应该关联公司和用户  &amp;ndash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.添加关于试算修改的讨论记录—&amp;gt;添加两个接口：修改和删除  &amp;mdash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;6.数据库表中的保险申请，添加一个type字段，标明是试算的还是升档的  &amp;ndash;  &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;7.写福米兑换场讨论结果文档，包括整个流程 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;8.写签证部分文档&lt;/li&gt;
&lt;li&gt;9.写福米兑换场相关的接口文档到showdoc &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;10.保险订单需要加入ticket，优先级高 &amp;ndash; &lt;em&gt;done : 不放入ticket，用专门的接口获取&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;11.心愿单接口没有数据&lt;/li&gt;
&lt;li&gt;12.福米查询接口没有&lt;/li&gt;
&lt;li&gt;13.代码框架整理 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;14.对于订单部分的处理，整理需要通知客服的情况，写通知&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做-1:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.福米兑换场 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;1.1.梳理福米兑换场业务逻辑 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;1.2.梳理福米兑换场部分的代码 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;1.3.实现底层代码：将福米支付写到anypay，实现dao，实现service，重写LaifuPay类 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;1.4.实现controller &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;1.5.添加一个获取邮费信息接口，目前两种方式，普邮10块，顺丰23块。 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2.签证：暂时没有资源&lt;/li&gt;
&lt;li&gt;3.查看阿里支付的文档，确认退款流程 &amp;ndash; &lt;em&gt;done : 可以进行部分退款&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.实现评论功能：&amp;ndash; &lt;em&gt;done&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;4.1整理评论功能逻辑 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.2添加数据库中的评论表 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.3写发表评论接口 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.4写查询评论接口，包括按照产品查 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;5.写支付接口

&lt;ul&gt;
&lt;li&gt;5.1整合支付功能到LaifuPay&lt;/li&gt;
&lt;li&gt;5.2写福米支付函数 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.3重写支付回调函数，包括成功和失败&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;6.写购物车接口 &amp;ndash; &lt;em&gt;done&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;6.1加入购物车 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;6.2查询购物车 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;6.3删除购物车 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;6.4修改购物车 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;7.写收货地址接口 &amp;ndash; &lt;em&gt;done&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;7.1添加收货地址 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;7.2修改收货地址 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;7.3删除收货地址 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;7.4设置默认的收货地址 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;8.写订单接口 &amp;ndash; &lt;em&gt;done&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;8.1从购物车生成订单 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;8.2直接生成订单 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;8.3取消订单 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;8.4修改订单 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;8.5删除订单接口,逻辑删除 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;8.6获取订单接口,取消的和删除订单不在客户端显示 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;9.写充值接口，包括微信和支付宝，同时要完成通知回调函数

&lt;ul&gt;
&lt;li&gt;9.1充福米 &amp;ndash; &lt;em&gt;done 需要上传一个福米类型的商品&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;9.2充卡&lt;/li&gt;
&lt;li&gt;修改说明：a.在order_pay表中添加两个字段，order_source用于表明是来自订单的还是充值的，charge_record_uuid用于存储充值记录id；b.charge_record表去掉支付相关信息；c.修改savePayMentInfo函数；d.重写充值接口；e.修改ticket表去掉支付相关字段；f.重写welfare获取接口&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;10.写退款接口

&lt;ul&gt;
&lt;li&gt;10.1退款申请接口 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;10.2退款申请条件判断接口:a.订单已支付；b.商品标明可以退款；c.对于虚拟商品需要是未使用;d.订单离付款时间不超过2周 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;10.3退款返款接口&lt;/li&gt;
&lt;li&gt;10.4退款原因列表获取接口 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;11.写账单接口

&lt;ul&gt;
&lt;li&gt;11.1获取对账单列表 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;11.2获取账户数据&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;12.整理用户消息通知相关接口的现状和规划&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;管理端web:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;管理端web：&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;1.熟悉angular框架 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;2.整理缺失的表单逻辑 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;3.写ajax参数跨域转换函数 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;待改-2:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.测试服务器上传图片问题修改 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;2.商品修改不成功问题 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;3.新增奖券图片录入功能 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;4.调整root权限下图片预览不完整问题 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做-2:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.保险理赔信息管理&lt;/li&gt;
&lt;li&gt;2.保险申请信息管理&lt;/li&gt;
&lt;li&gt;3.保险档案管理&lt;/li&gt;
&lt;li&gt;4.订单管理&lt;/li&gt;
&lt;li&gt;5.用户反馈管理&lt;/li&gt;
&lt;li&gt;6.运维人员管理&lt;/li&gt;
&lt;li&gt;7.其他：具体需求具体讨论&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;android:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;android：&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&#34;待改-3:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.登陆：输入密码确定以后先崩溃然后进入app&lt;/li&gt;
&lt;li&gt;2.活动分享：未完成&lt;/li&gt;
&lt;li&gt;3.租房详情：去掉more按钮&lt;/li&gt;
&lt;li&gt;4.关于来福：修改和ios一致&lt;/li&gt;
&lt;li&gt;5.修改手机号：验证身份证，提示邮箱不符合规范&lt;/li&gt;
&lt;li&gt;6.个人信息右边的编辑图标删除&lt;/li&gt;
&lt;li&gt;7.反馈：放到个人信息页&lt;/li&gt;
&lt;li&gt;8.账户余额:修改和效果图一致&lt;/li&gt;
&lt;li&gt;9.试算页面：添加一人后，不能修改信息 &amp;ndash; &lt;em&gt;确定不让修改&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;10.升档页面跟进设计稿修改 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;11.邀请码验证页面修改为验证手机号和邀请码&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做-3:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.福米兑换场&lt;/li&gt;
&lt;li&gt;2.去评分：未做&lt;/li&gt;
&lt;li&gt;3.我的福利：保险，确定是不是因为没有数据导致&lt;/li&gt;
&lt;li&gt;4.我的保障：交通意外险 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.福享汇：福米兑换场&lt;/li&gt;
&lt;li&gt;6.我的保障：申请记录列表，删除功能 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;7.我的保障：申请记录修改，使用试算页面逻辑(约两天时间) &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;8.福米兑换场首页功能实现 &amp;ndash; &lt;em&gt;目前需求不是很明确，要明确一下&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;9.商品展示：商品列表和商品详情 &amp;ndash; *ing : 有问题 android:两天  *&lt;/li&gt;
&lt;li&gt;10.购物车

&lt;ul&gt;
&lt;li&gt;10.1加入购物车&lt;/li&gt;
&lt;li&gt;10.2加载购物车&lt;/li&gt;
&lt;li&gt;10.3修改购物车&lt;/li&gt;
&lt;li&gt;10.4删除购物车中的商品&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;11.订单

&lt;ul&gt;
&lt;li&gt;11.1从购物车生成订单&lt;/li&gt;
&lt;li&gt;11.2直接从商品生成订单&lt;/li&gt;
&lt;li&gt;11.3订单加载&lt;/li&gt;
&lt;li&gt;11.4订单修改&lt;/li&gt;
&lt;li&gt;11.5取消订单&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;12.评论

&lt;ul&gt;
&lt;li&gt;12.1发表评论&lt;/li&gt;
&lt;li&gt;12.2查询评论&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;13.支付（目前还没有考虑清楚，所以暂时这样分类）

&lt;ul&gt;
&lt;li&gt;13.1微信支付&lt;/li&gt;
&lt;li&gt;13.2阿里支付&lt;/li&gt;
&lt;li&gt;13.3福米支付&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;ios:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;ios：&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&#34;待改-4:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;待改：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.活动—活动报名页：时间图标应该和时间一起隐藏&lt;/li&gt;
&lt;li&gt;2.账号设置：右面编辑图标删掉&lt;/li&gt;
&lt;li&gt;3.账号设置：安全设置可以修改的条目应该给一个右箭头&lt;/li&gt;
&lt;li&gt;4.重置登陆密码页面：修改和android一致&lt;/li&gt;
&lt;li&gt;5.关于来福页面：字体颜色有问题&lt;/li&gt;
&lt;li&gt;6.我的福利页面修改和效果图保持一致&lt;/li&gt;
&lt;li&gt;7.账户余额页面照效果图修改&lt;/li&gt;
&lt;li&gt;8.企业团险详情页面：字体居中&lt;/li&gt;
&lt;li&gt;9.从企业团险详情—详情 进入的保险详情页面显示浮标；从具体的某个保险点击进入的保险详情不显示浮标&lt;/li&gt;
&lt;li&gt;10.保险详情页：背景没有色块，按照效果图做&lt;/li&gt;
&lt;li&gt;11.按钮感应范围不舒服：
顶端返回按钮感应范围太宽
试算页面加减按钮感应范围太窄&lt;/li&gt;
&lt;li&gt;12.试算页面增加一人后，点击相应的列表应该在上面显示相应的信息，以便修改&lt;/li&gt;
&lt;li&gt;13.申请记录去掉假数据，调用接口&lt;/li&gt;
&lt;li&gt;14.申请记录点击后，背景色改浅一点&lt;/li&gt;
&lt;li&gt;15.报险，提交报险信息后，提示“xxx小时候后会有答复”&lt;/li&gt;
&lt;li&gt;16.租房详情：删除more按钮&lt;/li&gt;
&lt;li&gt;17.租房的分享：分享失败&lt;/li&gt;
&lt;li&gt;18.活动收藏：收藏或取消后不刷新&lt;/li&gt;
&lt;li&gt;19.升档页面跟进设计稿修改 &amp;ndash; &lt;em&gt;ing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;20.试算页面开发 &amp;ndash; &lt;em&gt;done&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;21.我的保障，申请记录列表，删除功能&lt;/li&gt;
&lt;li&gt;22.我的保障，申请记录修改，使用试算页面逻辑&lt;/li&gt;
&lt;li&gt;23.我的福利，保险购买记录&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;未做-4:84ed0d057c566f207df07d4dbf3355b4&#34;&gt;&lt;strong&gt;未做：&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.福米兑换场&lt;/li&gt;
&lt;li&gt;2.签证：暂时没有资源&lt;/li&gt;
&lt;li&gt;3.邀请码验证页面未做&lt;/li&gt;
&lt;li&gt;4.福米兑换场首页功能实现 &amp;ndash; &lt;em&gt;目前需求不是很明确，要明确一下&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;5.商品展示：商品列表和商品详情 &amp;ndash; &lt;em&gt;ing :  ios:两天&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;6.购物车

&lt;ul&gt;
&lt;li&gt;6.1加入购物车&lt;/li&gt;
&lt;li&gt;7.2加载购物车&lt;/li&gt;
&lt;li&gt;7.3修改购物车&lt;/li&gt;
&lt;li&gt;7.4删除购物车中的商品&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;8.订单

&lt;ul&gt;
&lt;li&gt;8.1从购物车生成订单&lt;/li&gt;
&lt;li&gt;8.2直接从商品生成订单&lt;/li&gt;
&lt;li&gt;8.3订单加载&lt;/li&gt;
&lt;li&gt;8.4订单修改&lt;/li&gt;
&lt;li&gt;8.5取消订单&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;9.评论

&lt;ul&gt;
&lt;li&gt;9.1发表评论&lt;/li&gt;
&lt;li&gt;9.2查询评论&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;10.支付（目前还没有考虑清楚，所以暂时这样分类）

&lt;ul&gt;
&lt;li&gt;10.1微信支付&lt;/li&gt;
&lt;li&gt;10.2阿里支付&lt;/li&gt;
&lt;li&gt;10.3福米支付&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>物流和现金流</title>
            <link>http://eyestone.github.io/post/discuss-shippingAndCash/</link>
            <pubDate>Tue, 21 Jun 2016 19:07:30 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-shippingAndCash/</guid>
            <description>

&lt;h4 id=&#34;讨论结果:8aa69f015727393ae24eff79bcb0fb4c&#34;&gt;&lt;strong&gt;讨论结果&lt;/strong&gt;&lt;/h4&gt;

&lt;h5 id=&#34;现金流:8aa69f015727393ae24eff79bcb0fb4c&#34;&gt;&lt;strong&gt;现金流&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;1.流向：

&lt;ul&gt;
&lt;li&gt;1.1.客户&amp;ndash;&amp;gt;来福：用户付款&lt;/li&gt;
&lt;li&gt;1.2.来福&amp;ndash;&amp;gt;供应商：月结，如果发生退款的，在月结的时候一并扣除&lt;/li&gt;
&lt;li&gt;1.3.来福&amp;ndash;&amp;gt;客户：用户申请退款给，在用户付款后2周内可以申请退款&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2.需要与供货商确认和达成的协议：

&lt;ul&gt;
&lt;li&gt;2.1.月结&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;物流:8aa69f015727393ae24eff79bcb0fb4c&#34;&gt;&lt;strong&gt;物流&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;1.角色：

&lt;ul&gt;
&lt;li&gt;1.1.客户&lt;/li&gt;
&lt;li&gt;1.2.来福&lt;/li&gt;
&lt;li&gt;1.3.供应商&lt;/li&gt;
&lt;li&gt;1.4.物流&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2.流程：

&lt;ul&gt;
&lt;li&gt;2.1.购买：用户下单&amp;ndash;&amp;gt;用户付款&amp;ndash;&amp;gt;来福收集订单&amp;ndash;&amp;gt;来福将订单提交给供应商&amp;ndash;&amp;gt;供应商发货&amp;ndash;&amp;gt;物流寄送&amp;ndash;&amp;gt;客户收货&lt;/li&gt;
&lt;li&gt;2.2.退货1：用户提交退货申请&amp;ndash;&amp;gt;来福反馈退款信息给供应商&amp;ndash;&amp;gt;供应商和客户沟通&amp;ndash;&amp;gt;确认可退款&amp;ndash;&amp;gt;供应商告知来福&amp;ndash;&amp;gt;用户发货&amp;ndash;&amp;gt;物流配送&amp;ndash;&amp;gt;供应商收到货物&amp;ndash;&amp;gt;供应商通知来福&amp;ndash;&amp;gt;来福给用户打款&lt;/li&gt;
&lt;li&gt;2.3.退货2：用户提交退货申请&amp;ndash;&amp;gt;来福和客户沟通&amp;ndash;&amp;gt;确认可以退款&amp;ndash;&amp;gt;来福告知供应商&amp;ndash;&amp;gt;用户发货&amp;ndash;&amp;gt;快递配送&amp;ndash;&amp;gt;供应商收到货物&amp;ndash;&amp;gt;供应商告知来福&amp;ndash;&amp;gt;来福打款给用户&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;3.问题：

&lt;ul&gt;
&lt;li&gt;3.1.如果由供应商和客户沟通，需要保证供应商不透露任何自己公司的信息，以保证用户体验&lt;/li&gt;
&lt;li&gt;3.2.如何保证物流控制和信息对称&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;4.注意事项

&lt;ul&gt;
&lt;li&gt;4.1.供应商在发货以后应该将运单号和快递方式发送给来福&lt;/li&gt;
&lt;li&gt;4.2.供应商在发货的时候应该打印一份包含来福，来福的订单号，买家在来福的用户名的单子放在快件中，并在单子上注明单子在退货时一并寄回，否则不能正常退款&lt;/li&gt;
&lt;li&gt;4.3.用户在退货的时候，需要在app上填写运单号和快递方式&lt;/li&gt;
&lt;li&gt;4.4.如果由供应商和客户沟通，需要保证供应商不透露任何自己公司的信息，以保证用户体验&lt;/li&gt;
&lt;li&gt;4.5.需要供应商配合的问题，需要和供应商沟通达成一致，最好形成协议&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;需要增加的功能:8aa69f015727393ae24eff79bcb0fb4c&#34;&gt;&lt;strong&gt;需要增加的功能&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;1.换货&lt;/li&gt;
&lt;li&gt;2.运单号填写，可以扫描二维码&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;趣玩退货流程:8aa69f015727393ae24eff79bcb0fb4c&#34;&gt;&lt;strong&gt;趣玩退货流程&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.一般商品在20元一下已经无法二次销售的，可以和买家协商争取直接给予一定补偿来处理，这类你自己退了款的，需要记录好分销流水号和订单号，和处理情况，需要有买家的拍照为证，然后可以找负责分销的人士给退费。&lt;/li&gt;
&lt;li&gt;2.商品在20元以上，确实因为质量问题需要退换货的，需退换的订单，请务必在退换货单子上注明客户的姓名、电话、退换原因与需求，否则可能会被延迟或无法处理如商品有质量问题，请于收货后7天内联系分销客服(7天之内无理由退换货)，核实无误后全额退/换，否则擅自寄回的物品将不予以处理（见易订货通知栏中提供的地址）；质量问题运费买家垫付。非质量问题，退换货运费均由买家承担（来回两个运费）！&lt;/li&gt;
&lt;li&gt;3.客户需要退换货的情况，请先与我们联系，以确定该商品的处理方式（如：让客户寄给库房退换，或者赔偿一定费用让客户自行处理）。请确定进行退款操作后立即联系我们，以便我们能在第一时间得知该情况进行操作（尤其是刚付款就取消的订单）。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;参与人:8aa69f015727393ae24eff79bcb0fb4c&#34;&gt;&lt;strong&gt;参与人&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;李艳&lt;/li&gt;
&lt;li&gt;林欣灏&lt;/li&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;记录人:8aa69f015727393ae24eff79bcb0fb4c&#34;&gt;&lt;strong&gt;记录人&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>购物车的设计</title>
            <link>http://eyestone.github.io/post/discuss-shoppingCart/</link>
            <pubDate>Tue, 14 Jun 2016 09:41:30 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-shoppingCart/</guid>
            <description>&lt;p&gt;&lt;strong&gt;讨论结果&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.点击大的编辑的时候，可以选中圆圈，批量删除&lt;/li&gt;
&lt;li&gt;2.编辑的时候数量不能小于1&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>订单和商品部分底层设计</title>
            <link>http://eyestone.github.io/post/discuss-oder/</link>
            <pubDate>Mon, 06 Jun 2016 17:23:24 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-oder/</guid>
            <description>

&lt;h4 id=&#34;问题提出:040511b124b80c6ff6c159ebf8c53d4e&#34;&gt;问题提出&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;如何从商品信息中获取order_process表中的标识位的相关信息&lt;/li&gt;
&lt;li&gt;如何向用户展示详细的商品信息&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;讨论结果:040511b124b80c6ff6c159ebf8c53d4e&#34;&gt;讨论结果&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.商品种类和卖法的总结如下图：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eyestone/eyestone.github.io/master/img/merchandise.png&#34; width = &#34;550&#34;  alt=&#34;福米兑换场流程&#34;       align=center /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.因为卖法涉及到价格计算以及一些业务流程的变化，而一个商品可能涉及到多种卖法，所以讲卖法单独拿出来作为一个表，其中要包括卖法相关的信息和价格。&lt;/li&gt;
&lt;li&gt;3.目前订单部分为了照顾之前商品部分的内容，暂时不处理order_process表中的标识字段。&lt;/li&gt;
&lt;li&gt;4.在第一阶段的order部分内容开发完成之后开始重构商品部分，同时完善订单部分内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;参与人:040511b124b80c6ff6c159ebf8c53d4e&#34;&gt;参与人&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;林欣灏&lt;/li&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;记录:040511b124b80c6ff6c159ebf8c53d4e&#34;&gt;记录&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>服务器代码的进化史</title>
            <link>http://eyestone.github.io/post/server-upgrade/</link>
            <pubDate>Fri, 03 Jun 2016 09:21:36 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/server-upgrade/</guid>
            <description>

&lt;p&gt;代码之美如同数学之美，好的代码通常是结构清晰，简单优雅的。
代码如同生命，需要时间的磨砺和进化，下面将对我们的服务器代码需进化的方向做系列分析。&lt;/p&gt;

&lt;h4 id=&#34;1-运行零配置:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;1. 运行零配置&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;一般服务器代码需要部署到容器之中才能正常运行，这不太符合拿来即用的原则。本地环境复杂化一向不是我推崇的方法，中国人自有最优秀的设计基因，比如中国的筷子就是比老外的刀叉更优秀的设计，所以复杂的代码系统不仅仅是功能设计，还需要优秀的配置管理。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;已搞定&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;目前，通过对gradle脚本的改造，已经实现“运行零配置”的目标，方法为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd welfare
gradle tomcatRunWar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你可以说，上面的代码还不完全是零配置，还需要安装gradle才能运行，当然不是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd welfare
../gradlew tomcatRunWar 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;gradlew 命令是在project根目录下的命令行，会自动在线下载gradle的运行环境，当然第一次执行时因为下载会比较费时。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;待解决的问题&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;代码中缓存系统memcached关闭后，tomcat启动时仍在不停的连接12345端口，这意味着代码中memcached的连接存在不能关闭的隐患&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;2-session共享:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;2. session共享&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;session通常记录用户的登录信息，保持用户的登录状态。&lt;/p&gt;

&lt;p&gt;现在的session系统采用spring默认的http session，只能自己用，不能分享给别人用，这种情况不利于未来微架构系统的分布式部署。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;采用spring-session框架, 将session由内存数据库redis接管。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;3-紧耦合的session和权限管理:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;3. 紧耦合的session和权限管理&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;为实现标题中的功能，把代码写得到处都是，代价是不易维护，增加各种潜在隐患。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;采用切面技术将session和权限功能进行接管。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;4-丑陋的memcached:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;4. 丑陋的memcached&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;先声明，其实memcached作为一个缓存技术，一点也不丑陋，这里的丑陋是指我们的使用它的代码丑陋。我们的使用方法是先写了一个数据库工具框架，然后在框架中嵌入memcached调用，要对那个表数据缓存，就把该表增加到insert，update，delete三个基本操作中。在很多年前，这样的设计是最优秀的方法之一，但时至今日，这样的设计不够灵活，现在增加一个缓存可以到方法上，简单到增加一个注解即可。&lt;/p&gt;

&lt;p&gt;其二，对于缓存系统的使用，我更倾向于被广泛使用且兼容性好的。比如现在redis的被支持率明显高于memcached，很多框架代码缺省支持redis，如果我们想继续使用memcached，必须自行寻找各种支持库，麻烦费时。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用redis代替memcached，但由于涉及到数据库处理层的修改，需要保持极度谨慎。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;5-多环境零配置:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;5. 多环境零配置&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;现有的代码环境，简单分为开发环境和生产环境，而开发环境指向的域名为laifucard.net,生产环境为.com，在gradle编译时只需要通过snapshot和release参数就能区分产生不同环境的运行时war文件。&lt;/p&gt;

&lt;p&gt;但，实际代码的实现方式却不优雅。仅仅是为了在不同编译参数时采用不同的域名，居然在service子项目中写了两个bean，同时还在两个xml文件中分别进行配置，想想就心塞。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;将代码环境分为 开发环境 生产环境 和 本地开发环境，因为目前的开发环境主要适用于laifucard.net环境&lt;/li&gt;
&lt;li&gt;环境变量写到文本配置文件中，目前主要包括域名配置和数据库配置信息&lt;/li&gt;
&lt;li&gt;由程序自动选择性读取不同的环境变量，可采用spring的profile特性&lt;/li&gt;
&lt;li&gt;gradle脚本增加一个编译选项，命名为local&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;6-自动化测试:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;6. 自动化测试&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;目前代码并没有养成单元测试的习惯，服务器端的单元测试大量集中于对接口的测试，实现技术主要采用google的mokito框架。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;针对已有接口写单元测试模板，供大家参考&lt;/li&gt;
&lt;li&gt;gradle脚本增加集成测试编译选项，使其自动化&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;7-代码检查:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;7. 代码检查&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;目前的代码检查方案是checkstyle,我原来已经做过检查。问题在于该工具的检查深度不够，我们需要更高级的工具帮我们来改善代码质量.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;启用sonarqube技术，对源码做最全面的检查&lt;/li&gt;
&lt;li&gt;根据检查结果，消除隐患，清除代码冗余&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;8-异步消息系统:b1e14c958e519618679260e8b94cfa96&#34;&gt;&lt;strong&gt;8. 异步消息系统&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;待解决&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;服务器系统中有短信通知、邮件通知、app通知等多种通知模式，在现阶段没什么用户的情况下问题不大，但当用户基数上去以后，最好将通知系统由异步消息系统接管，才能进一步提高服务器效率。&lt;/p&gt;

&lt;p&gt;所谓异步消息系统就好比一个邮局，服务器程序只需要把通知内容交给邮局，就可以忙自己的其他事情了，剩下的事情都交给邮局自行处理。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;服务器端部署消息代理系统&lt;/li&gt;
&lt;li&gt;改造msg-push子项目，进行xml文件配置即可&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;(未完，待续)&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>术语说明</title>
            <link>http://eyestone.github.io/post/common-terms/</link>
            <pubDate>Thu, 02 Jun 2016 16:55:50 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/common-terms/</guid>
            <description>&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;术语　　　　 　　　&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;解释 　　　&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;订单进程&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;指编程相关的流程控制，在订单系统中，涉及到springWebFlow的流程&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;订单过程&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;指一个订单从选购商品到最后成交的用户和系统交互的过程。目前整理的过程包括：选购商品-&amp;gt;加入购物车-&amp;gt;确认订单-&amp;gt;支付订单-&amp;gt;发货-&amp;gt;物流-&amp;gt;签收&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;付款码&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用于表明用户已购买身份的码。比如用户在我们平台上购买了一个健身卡，平台给用户分配一个付款码，用户凭此付款码就可以到相关的健身房健身。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;参与码&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;对于一些付费或者有限制条件的活动，用户报名后平台给用户分配一个参与码，用户凭这个码可以参与活动&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;充福米&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用各种方式为用户账户充入福米&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;充值&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;为各种卡等虚拟商品充值，可以使用福米、支付宝等各种方式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;福米充值&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;这显然是个坑，概念太模糊，不建议使用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;　　&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;记录&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>福米兑换场流程和相关接口的讨论</title>
            <link>http://eyestone.github.io/post/discuss-fumiCashing/</link>
            <pubDate>Tue, 31 May 2016 14:38:51 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-fumiCashing/</guid>
            <description>

&lt;h4 id=&#34;问题提出:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;问题提出&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;对于即将开展的工作内容的常规讨论&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;讨论结果:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;讨论结果&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.流程图如下，图中备注为需要用到的接口，打钩的表示已经实现的&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eyestone/eyestone.github.io/master/img/fumiExchangeFlowChart.png&#34; width = &#34;550&#34;  alt=&#34;福米兑换场流程&#34; align=center /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.在旧版本的代码中实现相关接口&lt;/li&gt;
&lt;li&gt;3.使用spring web flow技术实现订单部分内容&lt;/li&gt;
&lt;li&gt;4.对数据库表进行了相应的修改&lt;/li&gt;

&lt;li&gt;&lt;p&gt;5.order_status表中增加1个状态：已处理，表示我们平台已经将信息提交到供应商。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name　　　　value　　　　remark&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;已删除　　　　0&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;未付款　　　　1&lt;/li&gt;
&lt;li&gt;已付款　　　　2&lt;/li&gt;
&lt;li&gt;已取消　　　　3&lt;/li&gt;
&lt;li&gt;已消费　　　　4&lt;/li&gt;
&lt;li&gt;申请退款中　　5&lt;/li&gt;
&lt;li&gt;已退款　　　　6&lt;/li&gt;
&lt;li&gt;已评价　　　　7&lt;/li&gt;
&lt;li&gt;已处理　　　　8　　　　　　表示我们平台已经将订单通知到供应商，可能需要改编号&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;6.order_v2表中增加一个exception_code字段，用于记录异常信息。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name　　　　value　　　　remark&lt;/li&gt;
&lt;li&gt;正常　　　　　0&lt;/li&gt;
&lt;li&gt;订单缺货　　　1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;7.订单过程，因为目前没有办法监控供应商和物流，所以对于我们来说，用户付款就认为交易完成。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;数据库相关:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;数据库相关&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.购物车：bills，charge_record，collection，service_invoke_record&lt;/li&gt;
&lt;li&gt;2.订单：order_pay(暂时不用)，order_detail，link_type，order_v2(在用)，order(旧表，不建议用)，order_status，order_ticket_link，user_delivery_info&lt;/li&gt;
&lt;li&gt;3.merchandise_off_price(不建议用，在相关的表中使用tags字段作为另一个价格)，merchandise_specification，merchandise_type，merchandise_qualification，merchandise&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;todo:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;TODO&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.增加收货地址表，设置：userUuid，address，consignee，default，modifyTime字段&lt;/li&gt;
&lt;li&gt;2.实现相关接口&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;问题:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;问题&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1.考虑多商品订单如果往新的表（分子表）中存放，会出现什么问题？&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;参与人:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;参与人&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;林欣灏&lt;/li&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;记录:35f38fbbf3cae5068faaee2eb90e91ea&#34;&gt;记录&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>关于hugo中markdown格式的兼容性问题</title>
            <link>http://eyestone.github.io/post/hugo-issues/</link>
            <pubDate>Tue, 31 May 2016 10:21:34 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/hugo-issues/</guid>
            <description>&lt;p&gt;目前hugo并不兼容markdown的高级格式功能，比如todo list和流程图。&lt;/p&gt;

&lt;p&gt;经检查源码，发现是markdown的解码问题，原理为通过识别markdown标识，解析成对应html格式，而是流程图功能，为markdown扩展功能，用到了html5的矢量图特性。这类的功能增强要么我们自己扩展，要么坐等官方更新。&lt;/p&gt;

&lt;p&gt;仅作记录，空了继续补充。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>在windows下使用hugo写博客</title>
            <link>http://eyestone.github.io/post/tutorial-UseBlogOnWindows/</link>
            <pubDate>Wed, 25 May 2016 11:45:30 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/tutorial-UseBlogOnWindows/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;运行框（开始按钮旁边的小框框）输入cmd，回车打开命令行工具&lt;/li&gt;
&lt;li&gt;输入cd D: 回车  这个是跳转到相关的磁盘，如果是E盘，就输入E:&lt;/li&gt;
&lt;li&gt;输入 D: 回车  这个是切换到相应的盘&lt;/li&gt;
&lt;li&gt;输入 cd dir 回车  dir为要进入的目录，比如你的blog目录放在D:/blog就直接输入 cd blog&lt;/li&gt;
&lt;li&gt;新建文件 hugo new post/filename.md 这样就会在blog/content/post目录下创建一个filename.md文件&lt;/li&gt;
&lt;li&gt;用文本编辑器打开要编辑的文件进行编辑保存&lt;/li&gt;
&lt;li&gt;在命令行输入show.cmd，然后在浏览器输入localhost:1313即可查看本地的文档&lt;/li&gt;
&lt;li&gt;使用deploy.cmd命令，可以将本地文档同步到服务器&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>关于升档页面有未保存的编辑数据时的提交的讨论</title>
            <link>http://eyestone.github.io/post/discuss-shengdang3/</link>
            <pubDate>Tue, 24 May 2016 19:10:23 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-shengdang3/</guid>
            <description>&lt;p&gt;&lt;strong&gt;问题提出&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;按照之前的设计，在点击添加人的时候会默认将当前编辑的人的信息保存&lt;/li&gt;
&lt;li&gt;可是“我”并不想保存这个人的信息&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;讨论结果&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.人名右边的点击按钮只作为展开人名列表之用&lt;/li&gt;
&lt;li&gt;2.下面的“添加一人”按钮用做保存已编辑的信息&lt;/li&gt;
&lt;li&gt;3.修改已保存的列表中的信息时，如果有未保存的人的信息，提示“放弃|保存”&lt;/li&gt;
&lt;li&gt;4.点击“提交”按钮时，如果有未保存的人的信息，提示“放弃|提交”&lt;/li&gt;
&lt;li&gt;5.如果选择放弃即将未保存的信息忽略，其他信息照常处理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;参与人&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;李艳&lt;/li&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;记录&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;陆文金&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>企业用户邀请码验证流程</title>
            <link>http://eyestone.github.io/post/discuss-loginWorkFlow/</link>
            <pubDate>Fri, 20 May 2016 10:44:39 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/discuss-loginWorkFlow/</guid>
            <description>

&lt;h4 id=&#34;流程:c3d737271291e416175d535fdd08de68&#34;&gt;流程&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;企业收集员工的手机号&amp;ndash;&amp;gt;提供到来福&amp;ndash;&amp;gt;从后台录入并分配邀请码（放到invite_code表中）&lt;/li&gt;
&lt;li&gt;用户打开app&amp;ndash;&amp;gt;点击邀请码验证&amp;ndash;&amp;gt;输入手机号和邀请码&amp;ndash;&amp;gt;查询邀请码存在&amp;ndash;&amp;gt;生成用户&amp;ndash;&amp;gt;关联公司&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;使用场景:c3d737271291e416175d535fdd08de68&#34;&gt;使用场景&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;验证过程中，用户已生成但是未完成信息修改：&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;认为用户未完成验证，下次打开app的时候重新进行验证&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;用户使用A手机号获取邀请码完成注册，之后将手机号修改成B。A手机号被另一个人使用来获取邀请码。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;应该让其正常通过验证&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;备注:c3d737271291e416175d535fdd08de68&#34;&gt;备注&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;使用邀请码和激活码用户的区别：使用邀请码验证的用户是那一类信息比较少的，一般指没有身份证号，更多的是只提供了手机号码的一类；使用激活码的用户指信息比较全的用户，一般指包括身份证号都存在的用户，由后台上传用户信息，用户自己激活。&lt;/li&gt;
&lt;li&gt;激活码目前不适用数据库中的激活码，而是使用短信验证码。&lt;/li&gt;
&lt;li&gt;使用邀请码的用户不需要再激活。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;记录人:陆文金&lt;/em&gt;&lt;/p&gt;
</description>
          </item>
        
      
    
  </channel>
</rss>
