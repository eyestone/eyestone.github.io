<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>规范 on 项目文档库</title>
    <link>http://eyestone.github.io/tags/%E8%A7%84%E8%8C%83/</link>
    <description>Recent content in 规范 on 项目文档库</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Jul 2016 14:08:46 +0800</lastBuildDate>
    <atom:link href="http://eyestone.github.io/tags/%E8%A7%84%E8%8C%83/index.xml" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>工作规范和流程</title>
            <link>http://eyestone.github.io/post/common-RegulationAndProcedure/</link>
            <pubDate>Wed, 20 Jul 2016 14:08:46 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/common-RegulationAndProcedure/</guid>
            <description>

&lt;h4 id=&#34;原则:c3e286e1cff4e00881e394d6c749f320&#34;&gt;原则&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;够用 + 最小化&lt;/li&gt;
&lt;li&gt;方便他人，送人玫瑰手留余香&lt;/li&gt;
&lt;li&gt;有问必有答&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;邮箱:c3e286e1cff4e00881e394d6c749f320&#34;&gt;邮箱&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;重要的事情需要从邮件进行沟通&lt;/li&gt;
&lt;li&gt;收到邮件务必在第一时间回复&lt;/li&gt;
&lt;li&gt;每天至少查看n次邮箱，n&amp;gt;0&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;github博客:c3e286e1cff4e00881e394d6c749f320&#34;&gt;github博客&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用于讨论确定事宜和工作规范文档&lt;/li&gt;
&lt;li&gt;时常查看&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;github:c3e286e1cff4e00881e394d6c749f320&#34;&gt;github *&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;用于代码管理和任务管理&lt;/li&gt;
&lt;li&gt;github代码管理

&lt;ul&gt;
&lt;li&gt;有重要修改的时候必须提交一次代码&lt;/li&gt;
&lt;li&gt;原则上每天必须提交一次代码&lt;/li&gt;
&lt;li&gt;其他的协商决定提交&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;github任务管理

&lt;ul&gt;
&lt;li&gt;1.充分分析依赖资源，主要是执行人和前置任务&lt;/li&gt;
&lt;li&gt;2.将任务以issue的形式发布到github：描述任务尽量详细，避免任务接收者还要再来询问；描述清楚验收标准；如果是其他任务的前置任务一并说明；&lt;/li&gt;
&lt;li&gt;3.相关人员接受任务后进行comment回复，以便确认任务处于何种状态&lt;/li&gt;
&lt;li&gt;4.如果开发过程中遇到问题，及时在相关issue下说明具体情况，给出自己的分析结果和可能造成任务延时情况，并@相关人员&lt;/li&gt;
&lt;li&gt;5.任务完成后在issue下面说明完成的情况，注明是否会有潜在的问题，然后关闭任务&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;github任务模板

&lt;ul&gt;
&lt;li&gt;标题:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt; 模块 - 标题内容
 模块：ios、android、server、project ...
 举例：server - 修改默认地址删除逻辑
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;内容：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt; 关键字
 exec：执行人，参与人，一般将首要执行人写在最前面
 confirm：任务确认和关闭人
 deadline：截止时间
 tasks：任务详情
 comment：备注

 举例：
 project - 整理项目总结资料

 exec: 陆文金
 confirm: 林总 &amp;amp; 陆文金
 deadline：2016-07-24 22:00:00
 tasks:
 1.整理代码风格和注释说明
 2.在showdoc上建立android和ios目录，并写范文和要求
 3.修改github使用规范文档
 4.整理培训的方案文档
 5.整理需要使用到的工具和技术列表

 comment：
 5会在总结会之后给出
 此任务需要在项目总结会之前完成
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;总结&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt; 任务已完成
 1.见showdoc上相关项目的“基本原则”目录下的编码规范，ios阅读readme
 2.同1
 3.见eyestone.github.io上的《工作规范和流程》
 4.同3
 5.在总结会之后给出
 注：文档大多是例子，需要不断修改进化
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;培训:c3e286e1cff4e00881e394d6c749f320&#34;&gt;培训&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;主题模式，收集问题，针对问题培训&lt;/li&gt;
&lt;li&gt;设计场景，动手操作&lt;/li&gt;
&lt;li&gt;抽象的东西一起培训，具体的东西单独培训&lt;/li&gt;
&lt;li&gt;培训后需要由被培训人出文档，将培训的内容整理清楚作为正式文档保存&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;建议:c3e286e1cff4e00881e394d6c749f320&#34;&gt;建议&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.讨论&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.1.提出问题&lt;/li&gt;
&lt;li&gt;1.2.总结思考确定是否确实需要讨论&lt;/li&gt;
&lt;li&gt;1.3.整理讨论的点&lt;/li&gt;
&lt;li&gt;1.4.组织相关人员讨论&lt;/li&gt;
&lt;li&gt;1.5.讨论结果形成文字，发布到相关位置&lt;/li&gt;
&lt;li&gt;1.6.邮件通知相关人员查看&lt;/li&gt;
&lt;li&gt;1.7.有疑问则继续讨论知道定稿&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2.会议&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.1.会前每个人将要提的问题准备一份书面报告，回答以下问题：&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt; 究竟出了什么问题?
 问题的起因是什么？
 这个问题能找到哪些解决方案？
 你自己建议用哪一种方法？
&lt;/code&gt;&lt;/pre&gt;
</description>
          </item>
        
      
    
  </channel>
</rss>
