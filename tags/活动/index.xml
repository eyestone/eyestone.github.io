<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>活动 on 项目文档库</title>
    <link>http://eyestone.github.io/tags/%E6%B4%BB%E5%8A%A8/</link>
    <description>Recent content in 活动 on 项目文档库</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Jul 2016 14:59:31 +0800</lastBuildDate>
    <atom:link href="http://eyestone.github.io/tags/%E6%B4%BB%E5%8A%A8/index.xml" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>支付及签证、活动设计</title>
            <link>http://eyestone.github.io/post/PayAndDomain/</link>
            <pubDate>Sun, 03 Jul 2016 14:59:31 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/PayAndDomain/</guid>
            <description>

&lt;h3 id=&#34;支付原则:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;支付原则&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;独立模块，只从订单获取基本支付信息，不同的支付方式存入不同的表格&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;支付接口及参数:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;支付接口及参数&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Class Name : AnyPayV2&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Method Name : PayRequest&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;和订单表们和支付表 耦合&lt;/li&gt;
&lt;li&gt;支付和退款前的参数封装&lt;/li&gt;
&lt;li&gt;将支付信息写进对应的支付表中&lt;/li&gt;
&lt;li&gt;from：1= 福米兑换场, 2 = Visa, 3 = Activity&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;orderId: bigInt(20)&lt;/li&gt;
&lt;li&gt;isRefund: true, false&lt;/li&gt;
&lt;li&gt;payMethod: weixin, alipay, fumi&lt;/li&gt;
&lt;li&gt;return: 针对不同支付封装好参数Map&lt;/li&gt;
&lt;li&gt;注：支付宝直接返回参数map，微信需调用一次回调才能返回&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Method Name : payNotify&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;回调函数，和支付表耦合&lt;/li&gt;
&lt;li&gt;获取回调通知&lt;/li&gt;
&lt;li&gt;将回调信息补充进对应的支付表中&lt;/li&gt;
&lt;li&gt;兼容 支付 和 退款&lt;/li&gt;
&lt;li&gt;return: rtn_code, rtn_msg 若失败则在rtn_msg中写入错误信息&lt;/li&gt;
&lt;li&gt;注：微信有 2 次回调&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Method Name : payAfter, 支付完成后处理&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;和订单表们耦合&lt;/li&gt;
&lt;li&gt;根据订单来源进行支付后数据处理&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;支付宝交互逻辑及表结构:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;支付宝交互逻辑及表结构&lt;/h3&gt;

&lt;h4 id=&#34;支付宝交互流程图:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;支付宝交互流程图&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://doc.open.alipay.com/doc2/detail.htm?spm=a219a.7629140.0.0.DWEKRM&amp;amp;treeId=59&amp;amp;articleId=103658&amp;amp;docType=1&#34;&gt;doc&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;1-支付请求:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;1. 支付请求&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://doc.open.alipay.com/doc2/detail?articleId=103663&amp;amp;docType=1&amp;amp;treeId=59&#34;&gt;doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;由手机端sdk发起请求，服务器端生成请求数据包&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-异步通知:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;2. 异步通知&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;服务器获取支付宝服务器的异步通知&lt;/li&gt;

&lt;li&gt;&lt;p&gt;更改服务器支付数据&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://doc.open.alipay.com/doc2/detail.htm?spm=a219a.7629140.0.0.mKs6tp&amp;amp;treeId=59&amp;amp;articleId=103666&amp;amp;docType=1&#34;&gt;doc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;3-获取支付结果:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;3. 获取支付结果&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;手机端从支付宝服务器获取支付结果&lt;/li&gt;
&lt;li&gt;将支付结果展示给用户&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;表结构:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;表结构&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;order_id&lt;/li&gt;
&lt;li&gt;from&lt;/li&gt;

&lt;li&gt;&lt;p&gt;type  pay or refund&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;notify_time   通知时间    Date yyyy-MM-dd HH:mm:ss&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;notify_type   通知类型    String&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;notify_id 通知校验ID  String&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;sign_type 签名方式    String&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;sign  签名  String&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;out_trade_no  商户网站唯一订单号   String(64)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;subject   商品名称    String(128)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;trade_no  支付宝交易号  String(64)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;seller_id 卖家支付宝用户号    String(30)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;seller_email  卖家支付宝账号 String(100)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;buyer_id  买家支付宝用户号    String(30)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;buyer_email   买家支付宝账号 String(100)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;total_fee 交易金额    Number 1yuan&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;trade_status  交易状态    String&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;refund_status 退款状态    String&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;gmt_refund    退款时间    Date&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;gmt_payment   交易付款时间  Date&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;use_coupon    是否使用红包买家    String(1)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;discount  折扣  String 如有，负数，单位元&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通知交易状态 trade_status&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WAIT_BUYER_PAY    交易创建，等待买家付款。&lt;/li&gt;
&lt;li&gt;TRADE_CLOSED  在指定时间段内未支付时关闭的交易；在交易完成全额退款成功时关闭的交易。&lt;/li&gt;
&lt;li&gt;TRADE_SUCCESS 交易成功，且可对该交易做操作，如：多级分润、退款等。&lt;/li&gt;
&lt;li&gt;TRADE_FINISHED    交易成功且结束，即不可再做任何操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;退款状态 refund_status&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;REFUND_SUCCESS 退款成功。全额退款情况：trade_status=TRADE_CLOSED，而refund_status=REFUND_SUCCESS；&lt;/li&gt;
&lt;li&gt;REFUND_CLOSED 退款关闭&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;微信支付交互逻辑及表结构:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;微信支付交互逻辑及表结构&lt;/h3&gt;

&lt;h4 id=&#34;微信交互流程图:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;微信交互流程图&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_3&#34;&gt;doc&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;1-生成预支付单:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;1. 生成预支付单&lt;/h4&gt;

&lt;p&gt;商户系统先调用该接口在微信支付服务后台生成预支付交易单，返回正确的预支付交易回话标识后再在APP里面调起支付，详见
&lt;a href=&#34;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_1&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;手机端发起支付请求， 服务器生成预支付单，返回手机prepay_id 和 sign等&lt;/p&gt;

&lt;h4 id=&#34;2-app调用支付接口:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;2. App调用支付接口&lt;/h4&gt;

&lt;p&gt;app 收到 服务器 传来的 预支付交易会话id和微信返回的签名后，才能发起支付调用，
详见&lt;a href=&#34;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_12&amp;amp;index=2&#34;&gt;官方文档&lt;/a&gt;
第一次回调&lt;/p&gt;

&lt;h4 id=&#34;3-服务器获取支付结果通知:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;3. 服务器获取支付结果通知&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_7&amp;amp;index=3&#34;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;当微信服务器没有收到我方服务应答时，按该时间频率重发通知（通知频率为15/15/30/180/1800/1800/1800/1800/3600，单位：秒）&lt;/li&gt;
&lt;li&gt;微信通知从 notify_url 处接受，必须保证该 url 线上可访问&lt;/li&gt;
&lt;li&gt;先从微信的通知数据获得如下信息&lt;/li&gt;
&lt;li&gt;return_code : success 通信成功标识,然后有一大堆返回值&lt;/li&gt;
&lt;li&gt;result_code : success 交易成功标识&lt;/li&gt;
&lt;li&gt;接收完通知后，我方服务器再向微信服务器进行应答，返回 return_code: success, 有问题时，在return_msg 中填写错误信息&lt;/li&gt;
&lt;li&gt;服务器进行支付后的数据处理&lt;/li&gt;
&lt;li&gt;第二次回调&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-完成交易:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;4. 完成交易&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;手机端向服务器端查询支付结果&lt;/li&gt;
&lt;li&gt;服务器调用api向微信服务器查询支付结果&lt;/li&gt;
&lt;li&gt;服务器收到支付成功结构后，向手机端返回支付结果&lt;/li&gt;
&lt;li&gt;手机端向用户展示支付结果&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;5-关闭订单:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;5. 关闭订单&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_3&amp;amp;index=5&#34;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;以下情况需要调用关单接口：商户订单支付失败需要生成新单号重新发起支付，要对原订单号调用关单，避免重复支付；系统下单后，用户支付超时，系统退出不再受理，避免用户继续，请调用关单接口。
注意：订单生成后不能马上调用关单接口，最短调用时间间隔为5分钟。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;5-申请退款:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;5. 申请退款&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_4&amp;amp;index=6&#34;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;交易时间超过一年的订单无法提交退款；&lt;/li&gt;
&lt;li&gt;微信支付退款支持单笔交易分多次退款，多次退款需要提交原支付订单的商户订单号和设置不同的退款单号。一笔退款失败后重新提交，要采用原来的退款单号。总退款金额不能超过用户实际支付金额。&lt;/li&gt;
&lt;li&gt;需要双向证书&lt;/li&gt;
&lt;li&gt;提交退款申请后，通过调用该接口查询退款状态。退款有一定延时，用零钱支付的退款20分钟内到账，银行卡支付的退款3个工作日后重新查询退款状态。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;6-退款查询:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;6. 退款查询&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;退款有延时，用来判断是否退款成功&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_5&amp;amp;index=7&#34;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;表结构设计:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;表结构设计&lt;/h4&gt;

&lt;p&gt;字段内容为接口调用的参数，错误状态记录，每种情况的时间记录，和支付信息概要&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;order_id&lt;/li&gt;
&lt;li&gt;from&lt;/li&gt;

&lt;li&gt;&lt;p&gt;type  预付单，预付单返回， 支付，支付返回，退款，退款返回，关闭，关闭返回&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;应用ID  appid 32 (const)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;商户号   mch_id 32 (const)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;随机字符串 nonce_str 32&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;签名    sign 32&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;商品描述  body 128&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;商户订单号 out_trade_no 32 (from order_id)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;总金额   total_fee Int 单位 分&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;终端IP  spbill_create_ip 16&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;交易起始时间    time_start 14&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;交易过期时间    time_expire 14 交易过期时间&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;通知地址  notify_url 256 (const)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;交易类型  trade_type  16&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;返回状态码 return_code 16&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;返回信息  return_msg 128&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;随机字符串 wx_nonce_str 32 (return)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;签名    wx_sign 32 (return) （关键）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;业务结果  result_code  16&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;错误代码  err_code 32&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;错误代码描述    err_code_des 128&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;交易类型  trade_type 16&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;预支付交易会话标识 prepay_id 64 (关键)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;用户标识  openid 128&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;是否关注公众账号  is_subscribe 1 用户是否关注公众账号，Y-关注，N-未关注，仅在公众账号类型支付有效&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;付款银行  bank_type 16&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;货币种类  fee_type 8&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;现金支付金额    cash_fee int 订单总金额-代金券或立减优惠金额=现金支付金额&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;代金券或立减优惠金额    coupon_fee int&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;代金券或立减优惠使用数量  coupon_count int&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;微信支付订单号   transaction_id 32 (关键)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;支付完成时间    time_end 14&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;商户退款单号    out_refund_no   32&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;退款金额  refund_fee int&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;操作员   op_user_id 32 操作员帐号, 默认为商户号&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;微信退款单号    refund_id 32&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;退款入账账户    refund_recv_accout 64&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;退款状态  refund_status 16&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;签证:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;签证&lt;/h3&gt;

&lt;h3 id=&#34;活动:ef35c07f4ca5a63299137b11a5e90f23&#34;&gt;活动&lt;/h3&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>活动邀请码及邀请码报名设计逻辑</title>
            <link>http://eyestone.github.io/post/activity_invite/</link>
            <pubDate>Thu, 30 Jun 2016 17:11:33 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/activity_invite/</guid>
            <description>

&lt;p&gt;&lt;em&gt;author: freeopen&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;活动邀请码需求:ab7bbc3711d122254f98ee78f425e1c5&#34;&gt;活动邀请码需求&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;一个活动对应一个活动邀请码&lt;/li&gt;
&lt;li&gt;活动结束时，邀请码自动失效&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;设计逻辑:ab7bbc3711d122254f98ee78f425e1c5&#34;&gt;设计逻辑&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;修改活动保存接口，让邀请码在活动保存时自动生成&lt;/li&gt;
&lt;li&gt;为保证活动邀请码的稳定性，在活动修改后保存时，不能更改邀请码&lt;/li&gt;
&lt;li&gt;邀请码的保存位置：延用登录邀请码的数据表invite_code&lt;/li&gt;
&lt;li&gt;活动id的保存位置：invite_code.company_uuid 字段&lt;/li&gt;
&lt;li&gt;邀请码的生成逻辑采用4位随机数字&lt;/li&gt;
&lt;li&gt;为了区分邀请的使用场景，当send=1&amp;amp;used=0时，识别为用户注册邀请码；当send=2时，识别为活动邀请码&lt;/li&gt;
&lt;li&gt;invite_code.used 字段，记录参加的人数&lt;/li&gt;
&lt;li&gt;当活动过期时，将send字段设置为 -1&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;邀请码报名需求:ab7bbc3711d122254f98ee78f425e1c5&#34;&gt;邀请码报名需求&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;邀请码报名应用于非注册用户，当用户输入邀请码时，弹出填写报名信息页面&lt;/li&gt;
&lt;li&gt;非注册用户填写报名信息时，和注册用户不同的时，需要多填写姓名、电话和公司，其中姓名和电话为必填项&lt;/li&gt;
&lt;li&gt;报名有时需要可支付，支付支持微信、支付宝和福米&lt;/li&gt;
&lt;li&gt;报名有时需要限制为公司专属，即只有该公司的用户才允许报名&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;设计逻辑-1:ab7bbc3711d122254f98ee78f425e1c5&#34;&gt;设计逻辑&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;注册用户报名时，报名需填写的信息由后台json格式定义.&lt;/li&gt;
&lt;li&gt;非注册用户采用邀请码报名时，除填写原报名信息外，还需填写姓名、电话和公司等信息&lt;/li&gt;
&lt;li&gt;报名成功后，将报名数据存入新表activity_attend_v2 (因为原activity_attend必须要存user_uuid,只能弃用).&lt;/li&gt;
&lt;li&gt;当活动不需要支付时，不生成订单，报名信息存入 activity_attend_v2.&lt;/li&gt;
&lt;li&gt;当活动需要支付时，在order_v2表生成订单，订单类型为活动&lt;/li&gt;
&lt;li&gt;支付数据永远从新版订单表中读取，采用新的支付接口&lt;/li&gt;
&lt;li&gt;活动为公司专属时，判断用户的所属公司，对于公司专属的活动，报名时不启动邀请码报名模块&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;取消活动报名-新增:ab7bbc3711d122254f98ee78f425e1c5&#34;&gt;取消活动报名（新增）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;活动报名取消后，需填写取消原因后才能取消。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>关于活动报名信息的json格式约定</title>
            <link>http://eyestone.github.io/post/activity_attend/</link>
            <pubDate>Mon, 27 Jun 2016 14:44:28 +0800</pubDate>
            
            <guid>http://eyestone.github.io/post/activity_attend/</guid>
            <description>

&lt;p&gt;&lt;em&gt;author : freeopen&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;list&amp;quot;:[
        {
            &amp;quot;topic&amp;quot;:&amp;quot;性别&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;one&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:11,
                    &amp;quot;tagName&amp;quot;:&amp;quot;男&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:12,
                    &amp;quot;tagName&amp;quot;:&amp;quot;女&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;宝宝年龄&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;one&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:21,
                    &amp;quot;tagName&amp;quot;:&amp;quot;0-2&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:22,
                    &amp;quot;tagName&amp;quot;:&amp;quot;3-4&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:23,
                    &amp;quot;tagName&amp;quot;:&amp;quot;5-6&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;陪同家长&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;more&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:31,
                    &amp;quot;tagName&amp;quot;:&amp;quot;爸爸&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:32,
                    &amp;quot;tagName&amp;quot;:&amp;quot;妈妈&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:33,
                    &amp;quot;tagName&amp;quot;:&amp;quot;爷爷&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                },
                {
                    &amp;quot;tagId&amp;quot;:34,
                    &amp;quot;tagName&amp;quot;:&amp;quot;奶奶&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;手机号码&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;number&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:41,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;工作单位&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:51,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;json格式说明:19e7dc3fb049efb1274e23046f3c468b&#34;&gt;json格式说明&lt;/h3&gt;

&lt;p&gt;这里的json格式将对应app上不同的可视控件内容，详细如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;topic 标题&lt;/li&gt;
&lt;li&gt;type 控件类型

&lt;ul&gt;
&lt;li&gt;one   单选&lt;/li&gt;
&lt;li&gt;more 多选&lt;/li&gt;
&lt;li&gt;number 仅填数字的输入框&lt;/li&gt;
&lt;li&gt;text 填文本的输入框&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;tagId 自定义的id编号，相当于数组索引，方便代码快速检索&lt;/li&gt;
&lt;li&gt;tagName 当控件类型为 单选 和 多选 时有效，即选项信息&lt;/li&gt;
&lt;li&gt;tagStatus  当类型为单选和多选时，记录用户的选中情况, 其中为1时，表示缺省值，另外用户选中时为1，取消时为0。当为输入框时，记录输入内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;常用活动报名举例:19e7dc3fb049efb1274e23046f3c468b&#34;&gt;常用活动报名举例&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;list&amp;quot;:[
        {
            &amp;quot;topic&amp;quot;:&amp;quot;姓名&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:41,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;手机号码&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;number&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:41,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        },
        {
            &amp;quot;topic&amp;quot;:&amp;quot;工作单位&amp;quot;,
            &amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,
            &amp;quot;tag&amp;quot;:[
                {
                    &amp;quot;tagId&amp;quot;:51,
                    &amp;quot;tagName&amp;quot;:&amp;quot;&amp;quot;,
                    &amp;quot;tagStatus&amp;quot;:&amp;quot;&amp;quot;
                }
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
          </item>
        
      
    
  </channel>
</rss>
